#resource "aws_ami_from_instance" "example" {
 # name               = "terraform-example"
  #source_instance_id = i-ami-033594f8862b03bb2
#}

resource "aws_launch_configuration" "kk-lc" {
  name_prefix   = "terraform-lc-example"
  image_id      = aws_ami_from_instance.test-wordpress-ami.id
  instance_type = "t2.micro"
  key_name      = "aazadi"
  security_groups     = [aws_security_group.kk-ssh-allowed.id]
 # vpc_security_group_ids = [
  #      aws_security_group.kk-ssh-allowed.id
  #     ]
}

resource "aws_autoscaling_group" "kk-auto" {
  name                      = "kk-auto"
  max_size                  = 3
  min_size                  = 1
  health_check_grace_period = 300
  health_check_type         = "EC2"
  desired_capacity          = 2
  force_delete              = true
  launch_configuration      = aws_launch_configuration.kk-lc.name
  load_balancers            = ["terraform-elb"]
  vpc_zone_identifier       = ["subnet-0795a75c43e0b0caf", "subnet-08fcf901efecc24b2"]
  tag {
    key = "Name"
    value = "kk-project"
    propagate_at_launch = true
  }
  
}

resource "aws_autoscaling_policy" "custum-cpu-policy" {
  name                   = "custum-cpu-policy"
  scaling_adjustment     = 1
  adjustment_type        = "ChangeInCapacity"
  cooldown               = 300
  autoscaling_group_name = aws_autoscaling_group.kk-auto.name
  policy_type            = "SimpleScaling"

}


resource "aws_cloudwatch_metric_alarm" "custum-cpu-alarm" {
  alarm_name          = "custom-cpu-alarm"
  comparison_operator = "GreaterThanOrEqualToThreshold"
  evaluation_periods  = "2"
  metric_name         = "CPUUtilization"
  namespace           = "AWS/EC2"
  period              = "120"
  statistic           = "Average"
  threshold           = "80"

  dimensions = {
    AutoScalingGroupName = aws_autoscaling_group.kk-auto.name
  }

  alarm_description = "This metric monitors ec2 cpu utilization"
 # alarm_actions     = [aws_autoscaling_group.custum-cpu-alarm.arn]
}


# Create a new load balancer
resource "aws_elb" "terra-lb" {
  name               = "terraform-elb"
  availability_zones = ["us-east-1c", "us-east-1a", "us-east-1b"]
 #             vpc_id =   aws_vpc.Main.id
 # security_groups     = [aws_security_group.kk-ssh-allowed.id]
 # vpc_security_group_ids = [
  #      aws_security_group.kk-ssh-allowed.id
   #     ]

  listener {
    instance_port     = 80
    instance_protocol = "http"
    lb_port           = 80
    lb_protocol       = "http"
  }


  health_check {
    healthy_threshold   = 2
    unhealthy_threshold = 2
    timeout             = 3
    target              = "HTTP:80/"
    interval            = 30
  }

  cross_zone_load_balancing   = true
  connection_draining         = true
  connection_draining_timeout = 400

  tags = {
    Name = "terraform-elb"
  }
}

